[{
	"code": 200,
	"message": "Succeeded",
	"status": "APIGATEWAY_SUCCESS"
}, {
	"code": 400,
	"message": "Parameter {{.param0}} not supported",
	"status": "APIGATEWAY_ARGUMENT_NOT_SUPPORT"
}, {
	"code": 400,
	"message": "{{.param0}} not null",
	"status": "APIGATEWAY_ARGUMENT_NOT_FOUND"
}, {
	"code": 403,
	"message": "Permission denied",
	"status": "APIGATEWAY_HTTP_FORBIDDEN"
}, {
	"code": 404,
	"message": "{{.param0}} resource not existed",
	"status": "APIGATEWAY_NOT_FOUND"
}, {
	"code": 500,
	"message": "Operation failed",
	"status": "APIGATEWAY_OPERATION_FAILED"
}, {
	"code": 409,
	"message": "Group name repeated",
	"status": "APIGATEWAY_APIGROUPNAME_ISREPEAT"
}, {
	"code": 409,
	"message": "Backend service prefix name repeated in groups",
	"status": "APIGATEWAY_BACKENDSERVICE_PREFIX_ISREPEAT"
}, {
	"code": 409,
	"message": "API name repeated",
	"status": "APIGATEWAY_APINAME_ISREPEAT"
}, {
	"code": 409,
	"message": "Signature access key repeated",
	"status": "APIGATEWAY_ACCESSKEY_ISREPEAT"
}, {
	"code": 409,
	"message": "Authorized access key repeated",
	"status": "APIGATEWAY_ACCESSKEYAUTH_ISREPEAT"
}, {
	"code": 409,
	"message": "Policy name repeated",
	"status": "APIGATEWAY_POLICYNAME_ISREPEAT"
}, {
	"code": 500,
	"message": "Body definition exception of corresponding to APIs to be verified",
	"status": "APIGATEWAY_API_BODY_ERROR"
}, {
	"code": 400,
	"message": "More than one traffic control policy associating group",
	"status": "APIGATEWAY_BIND_GROUP_TOO_MUCH"
}, {
	"code": 400,
	"message": "Cannot be deleted before releasing the association.",
	"status": "APIGATEWAY_DELETE_ERROR"
}, {
	"code": 404,
	"message": "The group is not provided with effective API.",
	"status": "APIGATEWAY_NONE_VALID_API"
}, {
	"code": 404,
	"message": "No APIs to be verified",
	"status": "APIGATEWAY_NOT_EXIST_METHOD_ERROR"
}, {
	"code": 404,
	"message": "yaml file cannot be blank",
	"status": "APIGATEWAY_SWAGGER_NULL_ERROR"
}, {
	"code": 500,
	"message": "yaml file resolution exception",
	"status": "APIGATEWAY_SWAGGER_PARSE_ERROR"
}, {
	"code": 409,
	"message": "API path repeated",
	"status": "APIGATEWAY_API_PATH_ISREPEAT"
}, {
	"code": 409,
	"message": "Repeated group name of creation business line",
	"status": "APIGATEWAY_APISNAME_ISREPEAT"
}, {
	"code": 400,
	"message": "Please define path parameters in the following query Parameter Path:{{.param0}}",
	"status": "APIGATEWAY_PATH_PARAMETERS_MUST_BE_DEFINED"
}, {
	"code": 409,
	"message": "New revision number repeated",
	"status": "APIGATEWAY_REVISION_ISREPEAT"
}, {
	"code": 403,
	"message": "Without ICP Filing",
	"status": "APIGATEWAY_DOMAIN_NO_RECORDED"
}, {
	"code": 403,
	"message": "The domain name has already existed",
	"status": "APIGATEWAY_DOMAIN_ALREADY_EXISTS"
}, {
	"code": 403,
	"message": "Domain name is associated and cannot be modified",
	"status": "APIGATEWAY_DOMAIN_IS_BINDED"
}, {
	"code": 403,
	"message": "Number of domain names exceeds the maximum",
	"status": "APIGATEWAY_DOMAIN_NUM_IS_MAX"
}, {
	"code": 404,
	"message": "Invalid keyID",
	"status": "APIGATEWAY_NONE_VALID_APPID"
}, {
	"code": 400,
	"message": "Invalid User Pin",
	"status": "APIGATEWAY_NONE_VALID_PIN"
}, {
	"code": 400,
	"message": "Released grouping cannot be modified",
	"status": "APIGATEWAY_MODIFY_ERROR"
}, {
	"code": 400,
	"message": "Online versions are still available, then deletion cannot be used",
	"status": "APIGATEWAY_DELETE_API_ERROR"
}, {
	"code": 500,
	"message": "Service disabled or stopped",
	"status": "APIGATEWAY_INVALID_SERVICE_STATUS"
}, {
	"code": 500,
	"message": "The user has not completed real-name verification",
	"status": "APIGATEWAY_INVALID_AUTHENTICATION_STATUS"
},{
  "code": 400,
  "message": "{{.param0}} resource invalid",
  "status": "APIGATEWAY_INVALID_ARGUMENT"
},	{
  "code": 409,
  "message": "{{.param0}} resource repeated",
  "status": "APIGATEWAY_RESOURCE_ISREPEAT"
},	{
  "code": 409,
  "message": "subscriptionkey repeated",
  "status": "APIGATEWAY_SUBSCRIPTIONKEY_ISREPEAT"
},	{
  "code": 404,
  "message": "The group is not deployed",
  "status": "APIGATEWAY_APIGROUP_NOT_DEPLOY"
},	{
  "code": 500,
  "message": "yaml pares swagger error,ï¼Œ{{.param0}} param can not be null",
  "status": "APIGATEWAY_SWAGGER_PARSE_ERROR_PARAMETER"
},	{
  "code": 403,
  "message": "the number of key exceeds the maximum",
  "status": "APIGATEWAY_KEY_NUM_IS_MAX"
},	{
  "code": 403,
  "message": "the number of param exceeds the maximum",
  "status": "APIGATEWAY_PARAM_NUM_IS_MAX"
},	{
  "code": 400,
  "message": "jdsf gateway is invalid",
  "status": "APIGATEWAY_NONE_VALID_JDSF_GATEWAY"
},	{
  "code": 400,
  "message": "vpc upstream url is invalid",
  "status": "APIGATEWAY_NONE_VALID_VPC_UPSTREAM_URL"
},	{
  "code": 400,
  "message": "the type of authorization is invalid",
  "status": "APIGATEWAY_NONE_VALID_AUTH_USER_TYPE"
},	{
  "code": 404,
  "message": "the group has not access authorization",
  "status": "APIGATEWAY_BIND_GROUP_NOT_FOUND"
},	{
  "code": 404,
  "message": "jdsf group not existed",
  "status": "APIGATEWAY_JDSF_GROUP_NOT_FOUND"
},	{
  "code": 404,
  "message": "the group of {{.param0}} is not binded with jdsf gateway of {{.param1}}",
  "status": "APIGATEWAY_JDSF_GROUP_NO_BIND"
},	{
  "code": 404,
  "message": "the jdsf gateway is bounded with other group",
  "status": "APIGATEWAY_JDSF_GATEWAY_IS_BOUND"
},	{
  "code": 404,
  "message": "the group is bounded",
  "status": "APIGATEWAY_API_GROUP_IS_BOUND"
},	{
  "code": 404,
  "message": "the group can't bind jdsf gateway for the moment",
  "status": "APIGATEWAY_API_GROUP_IS_LOCKED"
},	{
  "code": 400,
  "message": "the environment has deployed,default backend config can't be modified",
  "status": "APIGATEWAY_BACKEND_CONFIG_MODIFY_ERROR"
},	{
  "code": 400,
  "message": "the group has deployed,please let it offline",
  "status": "APIGATEWAY_BIND_ERROR"
},	{
  "code": 400,
  "message": "the group has deployed,please let it offline",
  "status": "APIGATEWAY_UNBIND_ERROR"
},	{
  "code": 400,
  "message": "{{.param0}}",
  "status": "APIGATEWAY_INTERFACE_ERROR"
},	{
  "code": 500,
  "message": "group info sync failed",
  "status": "APIGATEWAY_API_GROUP_SYNC_FAIL"
},	{
  "code": 404,
  "message": "connection time out",
  "status": "APIGATEWAY_CONNECTION_TIME_OUT"
},	{
  "code": 409,
  "message": "configuration repeated",
  "status": "APIGATEWAY_CONFIGURATION_ISREPEAT"
},	{
  "code": 400,
  "message": "character length is too long",
  "status": "APIGATEWAY_CHARACTER_LENGTH_TOO_LONG"
},	{
  "code": 409,
  "message": "uris repeated",
  "status": "APIGATEWAY_URIS_ISREPEAT"
},	{
  "code": 409,
  "message": "{{.param0}} service repeated",
  "status": "APIGATEWAY_SERVICE_ISREPEAT"
},	{
  "code": 400,
  "message": "backend config url is invalid",
  "status": "APIGATEWAY_INVALID_BACKEND_URL"
},	{
  "code": 400,
  "message": "invalid domain",
  "status": "APIGATEWAY_INVALID_DOMAIN"
},	{
  "code": 400,
  "message": "get user info failed",
  "status": "APIGATEWAY_CONNECT_USER_INFO_ERROR"
}]
